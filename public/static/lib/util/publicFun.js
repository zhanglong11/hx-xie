export const treeFind=(t,e)=>{let r=null;return function t(n,o){for(let i of n){if(r)return!1;e(i)&&(o&&(i.parent=o),r=i),i.children&&t(i.children,i)}}(t,null),r};export const treeFindPath=(t,e,r=[])=>{if(!t)return[];for(const n of t){if(r.push(n),e(n))return r;if(n.children){const t=treeFindPath(n.children,e,r);if(t.length)return t}r.pop()}return[]};export function getAllLeaf(t){let e=[];return function t(r){r.forEach(r=>{r.children?t(r.children):e.push(r)})}(t),e}export function toFloat(t){const e=parseFloat(t);return isNaN(e)?0:e}export default{treeFind:treeFind};